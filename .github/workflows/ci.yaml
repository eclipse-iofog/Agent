name: CI
on:
  push:
    branches:
      - develop
      - release*
    tags: [v*]
    paths-ignore:
      - README.md
      - CHANGELOG.md
      - LICENSE
  pull_request:
    # Sequence of patterns matched against refs/heads
    branches:
      - develop
      - release*
    paths-ignore:
      - README.md
      - CHANGELOG.md
      - LICENSE
env:
  PROJECT: 'focal-freedom-236620'
  IMAGE_NAME: 'agent'
  GKE_CLUSTER: 'iofogctl-ci'
  GKE_ZONE: 'us-central1-a'

jobs:
  Agent:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
      packages: 'write'
    name: Agent
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 5.4
      - run: ./gradlew build
      - name: Generate JaCoCo Badge
        uses: cicirello/jacoco-badge-generator@v2
        with:
          generate-branches-badge: true
          jacoco-csv-file: iofog-agent-daemon/build/reports/jacoco/jacoco.csv
      - run: ./gradlew copyJar
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: 'Get Previous tag'
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: 0.0.0
      - name: Set image tag
        shell: bash
        id: tags
        run: |
          if [[ ${{ github.ref_name }} =~ ^v.* ]] ; then
            VERSION=${{ github.ref_name }}
            echo "VERSION=${VERSION:1}" >> "${GITHUB_OUTPUT}"
          else
             VERSION=${{ steps.previoustag.outputs.tag }}
             echo "VERSION=${VERSION:1}-${{ github.run_number }}" >> "${GITHUB_OUTPUT}"
          fi

      - name: Build and Push to GCR
        if: ${{ steps.tags.outcome }} == 'success'
        id: build_push_gcr
        uses: RafikFarhad/push-to-gcr-github-action@v5-beta
        with:
          gcloud_service_key: ${{ secrets.GCLOUD_SERVICE_KEY }}
          registry: gcr.io
          project_id: ${{ env.PROJECT }}
          image_name: ${{ env.IMAGE_NAME }}
          image_tag: latest, ${{ steps.tags.outputs.VERSION }}
          dockerfile: Dockerfile

      - name: Login to Github Container Registry
        uses: docker/login-action@v2
        with:
          registry: "ghcr.io"
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build and Push to ghcr
        uses: docker/build-push-action@v3
        id: build_push_ghcr
        with:
          file: Dockerfile
          push: true
          tags: |
            ghcr.io/eclipse-iofog/${{ env.IMAGE_NAME }}:${{ steps.tags.outputs.VERSION }}
            ghcr.io/eclipse-iofog/${{ env.IMAGE_NAME }}:latest


      #      - name: JaCoCo Code Coverage Report
#        id: jacoco_reporter
#        uses: PavanMudigonda/jacoco-reporter@v4.8
#        with:
#          coverage_results_path: '**/iofog-agent-daemon/build/reports/jacocoHtml'
#          coverage_report_name: Coverage
#          coverage_report_title: JaCoCo
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          skip_check_run: false
#          minimum_coverage: 80
#          fail_below_threshold: false
#          publish_only_summary: false

      # Publish Coverage Job Summary  # Optional
#      - name: Add Coverage Job Summary
#        run: echo "${{ steps.jacoco_reporter.outputs.coverageSummary }}" >> $GITHUB_STEP_SUMMARY

      # uploads the coverage-report.md artifact  # Optional
#
#      - name: Upload Code Coverage Artifacts
#        uses: actions/upload-artifact@v2
#        with:
#          name: code-coverage-report-markdown
#          path: '*/coverage-results.md'
#          retention-days: 1