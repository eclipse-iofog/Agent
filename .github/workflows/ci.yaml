name: CI
on:
  push:
    branches:
      - develop
      - release*
    tags: [v*]
    paths-ignore:
      - README.md
      - CHANGELOG.md
      - LICENSE
  pull_request:
    # Sequence of patterns matched against refs/heads
    branches:
      - develop
      - release*
    paths-ignore:
      - README.md
      - CHANGELOG.md
      - LICENSE
env:
  PROJECT: 'focal-freedom-236620'
  IMAGE_NAME: 'agent'
  GKE_CLUSTER: 'iofogctl-ci'
  GKE_ZONE: 'us-central1-a'

jobs:
  Agent:
    runs-on: ubuntu-20.04
    permissions:
      contents: 'read'
      id-token: 'write'
      packages: 'write'
    name: Agent
    steps:
    - uses: actions/checkout@v3
      with:
          fetch-depth: 0
    - uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
#        cache: 'gradle'
    - uses: gradle/gradle-build-action@v2
      with:
        arguments: build
    - name: get version
      shell: bash
      id: version
      run: echo "version=$(./gradlew properties --no-daemon --console=plain -q | grep "^version:" | awk '{printf $2}')"  >> "${GITHUB_OUTPUT}"
    - name: Set up Ruby 2.7
      uses: actions/setup-ruby@v1
      with:
        ruby-version: 2.7
    - run: |
        gem install --no-document fpm
        fpm -h
    - name: Create deb package
      shell: bash
      id: deb_package
      run: |
        if [[ ${{ github.ref_name }} =~ ^v.* ]] ; then
          echo "pkg_version=${{ steps.version.outputs.version }}" >> "${GITHUB_OUTPUT}"
        else
          echo "pkg_version=${{ steps.version.outputs.version }}-${{ github.run_number }}" >> "${GITHUB_OUTPUT}"
        fi
        cd packaging/iofog-agent
        fpm -s dir -d 'openjdk-8-jdk | openjdk-11-jdk' -d docker -t deb -n iofog-agent -v ${{ steps.deb_package.outputs.pkg_version }} -a all --deb-no-default-config-files --after-install debian.sh --after-remove remove.sh --before-upgrade upgrade.sh --after-upgrade debian.sh etc usr
        echo "pkg maybe created"
        ls
    - run: echo ${{ steps.version.outputs.version }}

#      - name: Publish package to packagecloud
#        if: ${{ steps.build_push_gcr.outcome }} == 'success'
#        uses: danielmundi/upload-packagecloud@v1
#        with:
#          PACKAGE-NAME: iofog-iofogcontroller-${{ steps.version.outputs.pkg_version }}.tgz
#          PACKAGECLOUD-USERNAME: iofog
#          PACKAGECLOUD-REPO: iofog-controller-snapshots
#          PACKAGECLOUD-DISTRIB: node
#          PACKAGECLOUD-TOKEN: ${{ secrets.packagecloud_token }}



