sudo: true
language: java
jdk: openjdk8
notifications:
  email: false
  slack:
    rooms:
      - secure: u/jR29mk4jya2Va1KfyFtjB3IWlSMl5IPr/5uWAhgmzN1jK/gqjArYGRFc6CY1p+P0SuPrZ0UzcU/av3RZBpzQjQEAzODR1/+lZESunMOw12TpqcUTZlTMCENWBHrWS5C4sfTBnRNwOt5qezYnzeRcvEApXPzBLFmtVLK1ZnaCRqoOLE2PlbPF/Ou0lJIsQaHt2MrO9zG/pN5fUDbdzDyOqNQ5SXvzEsay5MMJvxf0kN2dmYiQj3z/uy2kWc8HPHqJR78rLEWWKvMJgk3d3F/2Z/9rukvXCsSfPs9c+YNFNamwD/pOOdRczDw8oIc01V9sdtVgERy3wsovY1DVHIE4Z5wDcAmS2B0NDxT1moa2Xb67Ltx4QFncEDCwm2umxX/1X8lXZKOqnQHVn82UiMl5C6pfi/RxyJc592LVZx+NqD3SPHGmPy6HfdMu5fTvgxeGsnIz3aR3ZGbCjhWgUiG39tTEjFXY9Gc2J5WquYdn0TrwIDS9l1AOmdBSW/09PglT+Q9QgSf4SdsZBEx4VzVx4qNPBZrzdRxlFWeLVzFeD7RkRa6Z6sewe1DBZsz+t4QhjePx71Visj9vrpD9GSG6fu1IWgmyPL6X25+/7WVhbhbpxi0o0NkkwXw3A6gVJKll2Uw+UuFvvqZ+7WTdxMMyLwBFbncajYfLSmwd/9JFk=
    on_success: always
    on_failure: always
    template:
      - Repo `%{repository_slug}` *%{result}* build (<%{build_url}|#%{build_number}>)
        for commit (<%{compare_url}|%{commit}>) on branch `%{branch}`.
      - 'Execution time: *%{duration}*'
      - 'Message: %{message}'
stages:
- name: build
  if: type = pull_request
- name: dev_deploy
  if: branch = develop AND type = push
- name: pre_release
  if: branch =~ /^release-.*$/ AND type = push
- name: release
  if: branch = master and type = push
jobs:
  include:
  - stage: build
  - stage: dev_deploy
    before_install:
    - sudo apt-get install sshpass xml-twig-tools
    script:
    - ./scripts/deploy.sh $DEV_MACHINE_PASSWORD $DEV_MACHINE_USERNAME $DEV_MACHINE_IP
  - stage: pre_release
    before_install:
    - sudo apt-get install sshpass xml-twig-tools
    script:
    - export VERSION=`xml_grep --cond='project/version' pom.xml --text_only`
    - export DEV=-dev
    - bash scripts/packaging.sh
    - ./scripts/deploy.sh $PREPROD_MACHINE_PASSWORD $PREPROD_MACHINE_USERNAME $PREPROD_MACHINE_IP
  - stage: release
    before_install:
    - sudo apt-get install sshpass xml-twig-tools
    script:
    - export VERSION=`xml_grep --cond='project/version' pom.xml --text_only`
    - ./scripts/packaging.sh
    before_deploy:
    - git config --global user.name "${GH_USERNAME}";
    - git config credential.helper "store --file=.git/credentials";
    - echo "https://${GH_TOKEN}:@github.com" > .git/credentials;
    - git tag ${VERSION}
    deploy:
      provider: releases
      api_key: "${GH_TOKEN}"
      name: v${VERSION} ($(date +'%m/%d/%Y'))
      skip_cleanup: true
      on:
        branch: master
    after_deploy:
    - ./scripts/deploy.sh $PROD_MACHINE_PASSWORD $PROD_MACHINE_USERNAME $PROD_MACHINE_IP
